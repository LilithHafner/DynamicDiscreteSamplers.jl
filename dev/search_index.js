var documenterSearchIndex = {"docs":
[{"location":"#DynamicDiscreteSamplers","page":"Home","title":"DynamicDiscreteSamplers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DynamicDiscreteSamplers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#DynamicDiscreteSamplers.FixedSizeWeights","page":"Home","title":"DynamicDiscreteSamplers.FixedSizeWeights","text":"FixedSizeWeights <: Weights\n\nAn object that confomrs the the Weights interface and cannot be resized.\n\n\n\n\n\n","category":"type"},{"location":"#DynamicDiscreteSamplers.ResizableWeights","page":"Home","title":"DynamicDiscreteSamplers.ResizableWeights","text":"ResizableWeights <: Weights\n\nAn object that confomrs the the Weights interface and can be resized.\n\n\n\n\n\n","category":"type"},{"location":"#DynamicDiscreteSamplers.SemiResizableWeights","page":"Home","title":"DynamicDiscreteSamplers.SemiResizableWeights","text":"SemiResizableWeights <: Weights\n\nAn object that confomrs the the Weights interface and can be resized, but only to sizes at most as large as it's original size.\n\n\n\n\n\n","category":"type"},{"location":"#DynamicDiscreteSamplers.Weights","page":"Home","title":"DynamicDiscreteSamplers.Weights","text":"Weights <: AbstractVector{Float64}\n\nAn abstract vector capable of storing normal, non-negative floating point numbers on which rand samples an index according to values rather than sampling a value uniformly.\n\n\n\n\n\n","category":"type"},{"location":"#DynamicDiscreteSamplers._resize!-Tuple{ResizableWeights, Integer}","page":"Home","title":"DynamicDiscreteSamplers._resize!","text":"Reallocate w with the size len, compacting w into that new memory. Any elements if w past len must be set to zero already (that's a general invariant for Weights, though, not just this function).\n\n\n\n\n\n","category":"method"},{"location":"#DynamicDiscreteSamplers.initialize_empty-Tuple{Integer}","page":"Home","title":"DynamicDiscreteSamplers.initialize_empty","text":"initialize_empty(len::Integer)::Memory{UInt64}\n\nInitialize a Memory that, when underlaying a Weights object, represents len zeros.\n\n\n\n\n\n","category":"method"}]
}
